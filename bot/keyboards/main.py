from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.constants.countries import COUNTRIES, COUNTRIESFORMOSKOV


def country_keyboard():
    keyboard = []
    row = []
    for i, name in enumerate(COUNTRIES.keys()):
        row.append(InlineKeyboardButton(text=name, callback_data=f"country_{name}"))
        if len(row) == 3:  # 3 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    keyboard.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_tours")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def country_keyboard_for_Moskov():
    keyboard = []
    row = []
    for i, name in enumerate(COUNTRIESFORMOSKOV.keys()):
        row.append(InlineKeyboardButton(text=name, callback_data=f"country_{name}"))
        if len(row) == 3:  # 3 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    keyboard.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_tours")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


share_contact_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]
    ],
    resize_keyboard=True,
    one_time_keyboard=True
)

def main_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üß† –û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="chat")],
        [InlineKeyboardButton(text="üéØ –ü–æ–¥–±–æ—Ä —Ç—É—Ä–æ–≤", callback_data="tours")],
        [InlineKeyboardButton(text="üí¨ –ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞", url="https://t.me/pln_iva")]
    ])

def main_menu_button():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_tours")]
    ])
